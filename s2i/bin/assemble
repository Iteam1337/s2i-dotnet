#!/bin/bash -e
#
# S2I assemble script for the 'dotnet-builder' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

set -e

# User settable environment
DOTNET_CONFIGURATION="${DOTNET_CONFIGURATION:-Release}"
DOTNET_STARTUP_PROJECT="${DOTNET_STARTUP_PROJECT:-.}"
DOTNET_RESTORE_ROOT="${DOTNET_RESTORE_ROOT:-.}"

# Private environment
DOTNET_FRAMEWORK="netcoreapp1.1"

if [[ "$1" == "-h" ]]; then
	# If the 'dotnet-builder' assemble script is executed with '-h' flag,
	# print the usage.
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
# We set them here just for show, but you will need to set this up with your logic
# according to the application directory that you chose.

#if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
#  echo "---> Restoring build artifacts..."
#  mv /tmp/artifacts/* <your directory here>
#fi

# This is what we consider in this example 'installing the application'
# here you can go ahead an replace this with the actual building of python modules,
# bundle install, and anything else you need.

echo "---> Moving application source ..."
mv /tmp/src/* ./

echo "---> Installing dependencies ..."
dotnet restore $DOTNET_RESTORE_ROOT

echo "---> Building application from source ..."
dotnet publish -f "$DOTNET_FRAMEWORK" -c "$DOTNET_CONFIGURATION" "$DOTNET_STARTUP_PROJECT"

function fix-permissions {
	chgrp -R 0 $1
	chmod -R og+rw $1
	find $1 -type d -exec chmod g+x {} +
}

# Fix source directory permissions
fix-permissions ./
# set permissions for any installed artifacts
fix-permissions /opt/app-root